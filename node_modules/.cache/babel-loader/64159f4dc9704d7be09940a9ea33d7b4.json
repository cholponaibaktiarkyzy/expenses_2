{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Expenses\\\\expenseCH\\\\src\\\\components\\\\ExpensesFilter.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpensesFilter.css\";\nimport React from \"react\";\nimport ExpensesItem from \"./ExpensesItem\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst array = [{\n  label: \"Jan\",\n  value: 0\n}, {\n  label: \"Feb\",\n  value: 0\n}, {\n  label: \"Mar\",\n  value: 0\n}, {\n  label: \"Apr\",\n  value: 0\n}, {\n  label: \"May\",\n  value: 0\n}, {\n  label: \"Jun\",\n  value: 0\n}, {\n  label: \"Jul\",\n  value: 0\n}, {\n  label: \"Aug\",\n  value: 0\n}, {\n  label: \"Sep\",\n  value: 0\n}, {\n  label: \"Oct\",\n  value: 0\n}, {\n  label: \"Nov\",\n  value: 0\n}, {\n  label: \"Dec\",\n  value: 0\n}];\n\nconst ExpensesFilter = _ref => {\n  _s();\n\n  let {\n    selected,\n    allExpenses,\n    filteredExpenses\n  } = _ref;\n  const [exp, setExp] = React.useState([]);\n  React.useEffect(() => {\n    setExp(allExpenses);\n  }, [allExpenses]);\n\n  const filterItem = year => {\n    let result = allExpenses.filter(item => {\n      // expense.date?.getFullYear().toString() === selected;\n      let expense = item.newDate.toString().includes(year);\n      return expense;\n    });\n    setExp(result);\n  };\n\n  const dropdownChangeHandler = event => {\n    filterItem(event.target.value);\n  };\n\n  const deleteItem = id => {\n    setExp(prevSate => prevSate.filter(item => item.id !== id)); //v1\n    // setExp(prevState => {\n    // \tconst idx = prevState.findIndex(item => item.id === id);\n    // \treturn [...prevState.slice(0, idx), ...prevState.slice(idx + 1)];\n    // });//v2\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card-filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expenses-filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expenses-filter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expenses-filter__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Filter by year \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selected,\n            onChange: dropdownChangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2022\",\n              children: \"2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2021\",\n              children: \"2021\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2020\",\n              children: \"2020\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2019\",\n              children: \"2019\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-item\",\n            children: array.map(item => /*#__PURE__*/_jsxDEV(\"div\", {}, item.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-item-label\",\n            children: array.map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.label\n            }, item.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), exp.map(expense => /*#__PURE__*/_jsxDEV(ExpensesItem, {\n      deleteItem: deleteItem,\n      items: filteredExpenses,\n      id: expense.id,\n      date: expense.newDate,\n      title: expense.newTitle,\n      price: expense.newAmount\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ExpensesFilter, \"NqgTx1vlrTszjP6IwalZ1ynsUOc=\");\n\n_c = ExpensesFilter;\nexport default ExpensesFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesFilter\");","map":{"version":3,"names":["React","ExpensesItem","Card","array","label","value","ExpensesFilter","selected","allExpenses","filteredExpenses","exp","setExp","useState","useEffect","filterItem","year","result","filter","item","expense","newDate","toString","includes","dropdownChangeHandler","event","target","deleteItem","id","prevSate","map","newTitle","newAmount","Math","random"],"sources":["C:/Users/user/Desktop/Expenses/expenseCH/src/components/ExpensesFilter.js"],"sourcesContent":["import \"./ExpensesFilter.css\";\nimport React from \"react\";\nimport ExpensesItem from \"./ExpensesItem\";\nimport Card from \"./Card\";\n\nconst array = [\n\t{ label: \"Jan\", value: 0 },\n\t{ label: \"Feb\", value: 0 },\n\t{ label: \"Mar\", value: 0 },\n\t{ label: \"Apr\", value: 0 },\n\t{ label: \"May\", value: 0 },\n\t{ label: \"Jun\", value: 0 },\n\t{ label: \"Jul\", value: 0 },\n\t{ label: \"Aug\", value: 0 },\n\t{ label: \"Sep\", value: 0 },\n\t{ label: \"Oct\", value: 0 },\n\t{ label: \"Nov\", value: 0 },\n\t{ label: \"Dec\", value: 0 },\n];\n\nconst ExpensesFilter = ({ selected, allExpenses, filteredExpenses }) => {\n\tconst [exp, setExp] = React.useState([]);\n\tReact.useEffect(() => {\n\t\tsetExp(allExpenses);\n\t}, [allExpenses]);\n\tconst filterItem = year => {\n\t\tlet result = allExpenses.filter(item => {\n\t\t\t// expense.date?.getFullYear().toString() === selected;\n\t\t\tlet expense = item.newDate.toString().includes(year);\n\t\t\treturn expense;\n\t\t});\n\t\tsetExp(result);\n\t};\n\n\tconst dropdownChangeHandler = event => {\n\t\tfilterItem(event.target.value);\n\t};\n\n\tconst deleteItem = id => {\n\t\tsetExp(prevSate => prevSate.filter(item => item.id !== id)); //v1\n\t\t// setExp(prevState => {\n\t\t// \tconst idx = prevState.findIndex(item => item.id === id);\n\t\t// \treturn [...prevState.slice(0, idx), ...prevState.slice(idx + 1)];\n\t\t// });//v2\n\t};\n\n\treturn (\n\t\t<Card className='Card-filter'>\n\t\t\t<div className='expenses-filter'>\n\t\t\t\t<div className='expenses-filter'>\n\t\t\t\t\t<div className='expenses-filter__control'>\n\t\t\t\t\t\t<label>Filter by year </label>\n\t\t\t\t\t\t<select value={selected} onChange={dropdownChangeHandler}>\n\t\t\t\t\t\t\t<option value='2022'>2022</option>\n\t\t\t\t\t\t\t<option value='2021'>2021</option>\n\t\t\t\t\t\t\t<option value='2020'>2020</option>\n\t\t\t\t\t\t\t<option value='2019'>2019</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='chart-wrap'>\n\t\t\t\t\t<div className='chart-bar'>\n\t\t\t\t\t\t<div className='chart-item'>\n\t\t\t\t\t\t\t{array.map(item => (\n\t\t\t\t\t\t\t\t<div key={item.label}/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='chart-item-label'>\n\t\t\t\t\t\t\t{array.map(item => (\n\t\t\t\t\t\t\t\t<span key={item.label}>{item.label}</span>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{exp.map(expense => (\n\t\t\t\t<ExpensesItem\n\t\t\t\t\tdeleteItem={deleteItem}\n\t\t\t\t\titems={filteredExpenses}\n\t\t\t\t\tkey={Math.random()}\n\t\t\t\t\tid={expense.id}\n\t\t\t\t\tdate={expense.newDate}\n\t\t\t\t\ttitle={expense.newTitle}\n\t\t\t\t\tprice={expense.newAmount}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</Card>\n\t);\n};\n\nexport default ExpensesFilter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}